---
openapi: 3.0.0
info:
  title: Question Manager REST API
  description: Question manager api definition
  contact:
    email: mmcosta@kpmg.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/manuelccosta/Questions_Data_Vault_QDV-API/1.0.0
  description: SwaggerHub API Auto Mocking
tags:
- name: developers
  description: Operations available to regular developers
- name: admins
  description: Secured Admin-only calls
paths:
  /question/{questionID}/history:
    get:
      tags:
      - developers
      summary: local searches form
      description: |
        By passing in the appropriate options, you can search for
        available form in the system
      operationId: searchForm
      parameters:
      - name: questionID
        in: path
        description: uuid used to identify a question
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: header
        description: unique identifier used to authenticate a user, developer, or calling program to an API
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: query
        description: pass an optional search string for looking up inventory
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: skip
        in: query
        description: number of records to skip for pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/History'
        "400":
          description: bad input parameter
  /section/{sectionID}/history:
    get:
      tags:
      - developers
      summary: local searches form
      description: |
        By passing in the appropriate options, you can search for
        available form in the system
      parameters:
      - name: sectionID
        in: path
        description: uuid used to identify a section
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: header
        description: unique identifier used to authenticate a user, developer, or calling program to an API
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: query
        description: pass an optional search string for looking up inventory
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: skip
        in: query
        description: number of records to skip for pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/History'
        "400":
          description: bad input parameter
  /form/{formID}/history:
    get:
      tags:
      - developers
      summary: local searches form
      description: |
        By passing in the appropriate options, you can search for
        available form in the system
      parameters:
      - name: formID
        in: path
        description: uuid used to identify a form
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: header
        description: unique identifier used to authenticate a user, developer, or calling program to an API
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: query
        description: pass an optional search string for looking up inventory
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: skip
        in: query
        description: number of records to skip for pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/History'
        "400":
          description: bad input parameter
  /form:
    get:
      tags:
      - developers
      summary: searches form
      description: |
        By passing in the appropriate options, you can search for
        available form in the system
      operationId: searchGlobalForm
      parameters:
      - name: key
        in: header
        description: unique identifier used to authenticate a user, developer, or calling program to an API
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: query
        description: pass an optional search string for looking up inventory
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: skip
        in: query
        description: number of records to skip for pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Form'
        "400":
          description: bad input parameter
    put:
      tags:
      - admins
      summary: updates an form item
      description: Updates an item to the system
      operationId: updateForm
      parameters:
      - name: key
        in: header
        description: unique identifier used to authenticate a user, developer, or calling program to an API
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Inventory item to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Form'
      responses:
        "201":
          description: item updated
        "400":
          description: invalid input, object invalid
        "409":
          description: item doesnt exists
        "500":
          description: internal error
    post:
      tags:
      - admins
      summary: adds an form item
      description: Adds an item to the system
      operationId: addForm
      parameters:
      - name: key
        in: header
        description: unique identifier used to authenticate a user, developer, or calling program to an API
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Form item to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Form'
      responses:
        "201":
          description: item created
        "400":
          description: invalid input, object invalid
        "409":
          description: an existing item already exists
        "500":
          description: internal error
    delete:
      tags:
      - admins
      summary: deletes an inventory item
      description: Deletes an item to the system
      operationId: deleteForm
      parameters:
      - name: key
        in: header
        description: unique identifier used to authenticate a user, developer, or calling program to an API
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: item deleted
        "400":
          description: invalid input, object invalid
        "409":
          description: item doesnt exists
        "500":
          description: internal error
  /section:
    get:
      tags:
      - developers
      summary: searches section
      description: |
        By passing in the appropriate options, you can search for
        available section in the system
      operationId: searchSection
      parameters:
      - name: key
        in: header
        description: unique identifier used to authenticate a user, developer, or calling program to an API
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: query
        description: pass an optional search string for looking up inventory
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: skip
        in: query
        description: number of records to skip for pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Section'
        "400":
          description: bad input parameter
        "500":
          description: internal error
    put:
      tags:
      - admins
      summary: updates an section item
      description: updates an item to the system
      operationId: updateSection
      parameters:
      - name: key
        in: header
        description: unique identifier used to authenticate a user, developer, or calling program to an API
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Section item to updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Section'
      responses:
        "201":
          description: item updated
        "400":
          description: invalid input, object invalid
        "409":
          description: item doesnt exists
        "500":
          description: internal error
    post:
      tags:
      - admins
      summary: adds a section item
      description: Adds an item to the system
      operationId: addInventory
      parameters:
      - name: key
        in: header
        description: unique identifier used to authenticate a user, developer, or calling program to an API
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Inventory item to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Section'
      responses:
        "201":
          description: item created
        "400":
          description: invalid input, object invalid
        "409":
          description: an existing item already exists
        "500":
          description: internal error
    delete:
      tags:
      - admins
      summary: deletes an inventory item
      description: Deletes an item to the system
      operationId: deleteSection
      parameters:
      - name: key
        in: header
        description: unique identifier used to authenticate a user, developer, or calling program to an API
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: item deleted
        "400":
          description: invalid input, object invalid
        "409":
          description: item doesnt exists
        "500":
          description: internal error
  /question:
    get:
      tags:
      - developers
      summary: searches question
      description: |
        By passing in the appropriate options, you can search for
        available question in the system
      operationId: searchQuestion
      parameters:
      - name: key
        in: header
        description: unique identifier used to authenticate a user, developer, or calling program to an API
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: label
        in: query
        description: pass an optional search string for looking up inventory
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: bdp
        in: query
        description: pass an optional search string for looking up inventory
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: skip
        in: query
        description: number of records to skip for pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
        "400":
          description: bad input parameter
        "500":
          description: internal error
    put:
      tags:
      - admins
      summary: updates a question item
      description: Updates an item to the system
      operationId: updateQuestion
      parameters:
      - name: key
        in: header
        description: unique identifier used to authenticate a user, developer, or calling program to an API
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Question item to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
      responses:
        "201":
          description: item updated
        "400":
          description: invalid input, object invalid
        "409":
          description: doesnt exists
        "500":
          description: internal error
    post:
      tags:
      - admins
      summary: adds an question item
      description: Adds an item to the system
      operationId: addQuestion
      parameters:
      - name: key
        in: header
        description: unique identifier used to authenticate a user, developer, or calling program to an API
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Inventory item to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
      responses:
        "201":
          description: item created
        "400":
          description: invalid input, object invalid
        "409":
          description: an existing item already exists
        "500":
          description: internal error
    delete:
      tags:
      - admins
      summary: deletes an inventory item
      description: deletes an item to the system
      operationId: deletesQuestion
      parameters:
      - name: key
        in: header
        description: unique identifier used to authenticate a user, developer, or calling program to an API
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: item deleted
        "400":
          description: invalid input, object invalid
        "409":
          description: item doesnt exists
        "500":
          description: internal error
components:
  schemas:
    History:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        version:
          type: integer
          example: 100
        updatedOn:
          type: string
          format: datetime
          example: 29/02/2021 00:21
        updatedBy:
          type: string
          format: username
          example: mcosta
    Question:
      required:
      - active
      - bdp
      - createdBy
      - label
      - type
      - updatedBy
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        version:
          type: integer
          example: 100
        updatedOn:
          type: string
          format: datetime
          example: 29/02/2021 00:21
        createdOn:
          type: string
          format: datetime
          example: 29/02/2021 00:21
        createdBy:
          type: string
          format: username
          example: mcosta
        sequence:
          type: integer
          example: 1
        format:
          type: string
          format: regex
          example: ^(0[1-9]|[12][0-9]|3[01])[- /.](0[1-9]|1[012])[- /.](19|20)\d\d$
        updatedBy:
          type: string
          format: username
          example: mcosta
        active:
          type: boolean
          example: true
        label:
          type: string
          example: Party name?
        bdp:
          type: string
          example: party.legalName
        type:
          type: string
          example: TEXT
        options:
          type: array
          example:
          - PT
          - UK
          - US
          items:
            type: string
        instructions:
          type: string
          example: Some instructions
        tooltip:
          type: string
          example: Tooltip help text
        placeholder:
          type: string
          example: Company Name
        required:
          type: boolean
          example: true
        requiredExpression:
          type: string
          description: MVEL Expression.Overwrite default value
          example: party.legalName = NULL
        minLength:
          type: integer
          example: 0
        minLengthExpression:
          type: string
          description: MVEL Expression.Overwrite default value
          example: party.legalName = NULL
        maxLength:
          type: integer
          example: 10
        maxLengthExpression:
          type: string
          description: MVEL Expression.Overwrite default value
          example: party.legalName = NULL
        visible:
          type: boolean
          example: true
        visibleExpression:
          type: string
          description: MVEL Expression.Overwrite default value
          example: party.legalName = NULL
        defaultValueExpression:
          type: string
          description: MVEL Expression.Overwrite default value
          example: party.legalName = NULL
        validationExpression:
          type: string
          description: MVEL Expression.Overwrite default value
          example: party.legalName = NULL
        args:
          type: array
          example:
          - party.legalName
          items:
            type: string
    Section:
      required:
      - createdBy
      - name
      - updatedBy
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        version:
          type: integer
          example: 100
        updatedOn:
          type: string
          format: datetime
          example: 29/02/2021 00:21
        createdOn:
          type: string
          format: datetime
          example: 29/02/2021 00:21
        createdBy:
          type: string
          format: username
          example: mcosta
        sequence:
          type: integer
          example: 1
        updatedBy:
          type: string
          format: username
          example: mcosta
        active:
          type: boolean
          example: true
        name:
          type: string
          example: Referral Form
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'
    Form:
      required:
      - createdBy
      - name
      - updatedBy
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        version:
          type: integer
          example: 100
        updatedOn:
          type: string
          format: datetime
          example: 29/02/2021 00:21
        createdOn:
          type: string
          format: datetime
          example: 29/02/2021 00:21
        createdBy:
          type: string
          format: username
          example: mcosta
        updatedBy:
          type: string
          format: username
          example: mcosta
        active:
          type: boolean
          example: true
        name:
          type: string
          example: ACME Corporation
        sections:
          type: array
          items:
            $ref: '#/components/schemas/Section'
